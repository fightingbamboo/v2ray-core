name: Release

on:
  release:
    types: [prereleased]
  push:
    branches:
      - master
      - v*
      - dev*
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - "**/*.go"
      - "go.mod"
      - "go.sum"
      - ".github/workflows/*.yml"

jobs:
  release:
    if: github.repository != 'v2ray/v2ray-core'
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: 1.15

      - name: Checkout codebase
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get project dependencies
        run: go mod download

      - name: Set variables
        run: |
          echo "RELEASE_TAG=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "RELEASE_SHA=${{ github.sha }}" >> $GITHUB_ENV
          echo "RELEASE_BODY=https://github.com/v2fly/V2FlyBleedingEdgeBinary/commit/${{ github.sha }}" >> $GITHUB_ENV
          echo "PROJECT_NAME=v2fly-unstable" >> $GITHUB_ENV
          echo "UPLOAD_REPO=v2fly/V2FlyBleedingEdgeBinary" >> $GITHUB_ENV
          echo "PERSONAL_TOKEN=${{ secrets.BLEEDINGEDGEBINARY_REPO_TOKEN }}" >> $GITHUB_ENV
          echo "COMMENT_TARGETTED_REPO_OWNER=v2fly" >> $GITHUB_ENV
          echo "COMMENT_TARGETTED_REPO_NAME=v2ray-core" >> $GITHUB_ENV
          echo "BuildUtil=github.com/v2fly/V2BuildAssist/v2buildutil" >> $GITHUB_ENV
        shell: bash

      - name: Set variables with condition
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          echo "RELEASE_TAG=$(git describe --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_ENV
          echo "RELEASE_BODY=" >> $GITHUB_ENV
          echo "PROJECT_NAME=v2fly" >> $GITHUB_ENV
          echo "UPLOAD_REPO=v2fly/v2ray-core" >> $GITHUB_ENV
          echo "PERSONAL_TOKEN=${{ secrets.GITHUB_TOKEN }}" >> $GITHUB_ENV
        shell: bash

      - name: Download Geo files
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          curl -L -o release/config/geoip.dat "https://github.com/v2fly/geoip/raw/release/geoip.dat"
          curl -L -o release/config/geosite.dat "https://github.com/v2fly/domain-list-community/raw/release/dlc.dat"
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add release/config/geoip.dat release/config/geosite.dat
          git commit -m "update geoip, geosite"
          git remote add update "https://${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}@github.com/${{ github.repository }}"
          git push update

      - name: Build binaries
        run: bazel build --action_env=PATH=$PATH --action_env=GOPATH=$(go env GOPATH) --action_env=GOCACHE=$(go env GOCACHE) --action_env=SPWD=$(pwd) --spawn_strategy local //release:all

      - name: Generate Release.unsigned file and dgst files
        run: |
          cd bazel-bin/release || exit 1
          for binary in $(find . -type f -name "*.zip"); do
            go run ${BuildUtil} gen file ${binary} >> Release.unsigned.unsorted
            openssl dgst -md5 ${binary} | sed 's/([^)]*)//g' >> ${binary}.dgst
            openssl dgst -sha1 ${binary} | sed 's/([^)]*)//g' >> ${binary}.dgst
            openssl dgst -sha256 ${binary} | sed 's/([^)]*)//g' >> ${binary}.dgst
            openssl dgst -sha512 ${binary} | sed 's/([^)]*)//g' >> ${binary}.dgst
          done
          go run ${BuildUtil} gen version ${RELEASE_TAG} >> Release.unsigned.unsorted
          go run ${BuildUtil} gen project ${PROJECT_NAME} >> Release.unsigned.unsorted
          go run ${BuildUtil} gen sort < Release.unsigned.unsorted > Release.unsigned
          openssl dgst -md5 Release.unsigned | sed 's/([^)]*)//g' >> Release.unsigned.dgst
          openssl dgst -sha1 Release.unsigned | sed 's/([^)]*)//g' >> Release.unsigned.dgst
          openssl dgst -sha256 Release.unsigned | sed 's/([^)]*)//g' >> Release.unsigned.dgst
          openssl dgst -sha512 Release.unsigned | sed 's/([^)]*)//g' >> Release.unsigned.dgst
          rm -f Release.unsigned.unsorted

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_name: ${{ env.UPLOAD_REPO }}
          repo_token: ${{ env.PERSONAL_TOKEN }}
          file: bazel-bin/release/*.{zip,dgst}
          file_glob: true
          tag: ${{ env.RELEASE_TAG }}
          release_name: ${{ env.RELEASE_TAG }}
          overwrite: true
          prerelease: true
          body: ${{ env.RELEASE_BODY }}

      - name: Post comment on commit
        if: startsWith(github.ref, 'refs/heads/') && github.repository == 'v2fly/v2ray-core'
        run: |
          echo "Build Finished" > buildcomment
          echo "https://github.com/${{ env.UPLOAD_REPO }}/releases/tag/${{ env.RELEASE_TAG }}" >> buildcomment
          go run ${BuildUtil} post commit "${{ env.RELEASE_SHA }}" < buildcomment
